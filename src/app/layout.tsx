import type { Metadata } from "next";
import localFont from "next/font/local";
import { Lato } from "next/font/google";
import "./globals.css";
import "./prose-mirror.css";

import ClientSessionProvider from "@/lib/ClientSessionProvider";
import { Suspense } from "react";
import Loading from "@/components/Loading";

const geistSans =
  localFont(
    {
      src: "./fonts/GeistVF.woff",
      variable:
        "--font-geist-sans",
      weight:
        "100 900",
    }
  );
const tahoma =
  localFont(
    {
      src: "./fonts/tahoma.ttf",
      variable:
        "--font-tahoma",
      weight:
        "100 200 300 400 500 600 700 800 900",
    }
  );
const geistMono =
  localFont(
    {
      src: "./fonts/GeistMonoVF.woff",
      variable:
        "--font-geist-mono",
      weight:
        "100 900",
    }
  );
const lato =
  Lato(
    {
      weight:
        [
          "100",
          "300",
          "400",
          "700",
          "900",
        ],
      style:
        "normal",
      variable:
        "--font-lato",
    }
  );
const arkhipRegular =
  localFont(
    {
      src: "./fonts/Arkhip-Regular.ttf",
      variable:
        "--font-arkhip-regular",
      weight:
        "400 ",
    }
  );

export const metadata: Metadata =
  {
    title:
      "Tailorizor",
    description:
      "Generated by create next app",
  };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${arkhipRegular.variable} ${lato.variable} ${tahoma.variable} antialiased`}
      >
        <ClientSessionProvider>
          <Suspense
            fallback={
              <div className="h-screen w-screen flex items-center justify-center">
                <Loading
                  className="text-primary"
                  size={
                    100
                  }
                />
              </div>
            }
          >
            {
              children
            }
          </Suspense>
        </ClientSessionProvider>
      </body>
    </html>
  );
}
